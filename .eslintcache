[{"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/index.js":"1","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/App.js":"2","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/HomePage.js":"3","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/Login.js":"4","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/AddGame.js":"5","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/Register.js":"6","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/SearchGame.js":"7","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/Navbar.js":"8","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/UserProfile.js":"9","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/ActiveOffers.js":"10","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/EditableFields.js":"11","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/Logout.js":"12"},{"size":197,"mtime":1610606957411,"results":"13","hashOfConfig":"14"},{"size":961,"mtime":1611589117482,"results":"15","hashOfConfig":"14"},{"size":487,"mtime":1611588975693,"results":"16","hashOfConfig":"14"},{"size":3191,"mtime":1611644628050,"results":"17","hashOfConfig":"14"},{"size":5040,"mtime":1611563773473,"results":"18","hashOfConfig":"14"},{"size":8512,"mtime":1611644535729,"results":"19","hashOfConfig":"14"},{"size":3115,"mtime":1610650779871,"results":"20","hashOfConfig":"14"},{"size":883,"mtime":1611643702145,"results":"21","hashOfConfig":"14"},{"size":9698,"mtime":1611564307433,"results":"22","hashOfConfig":"14"},{"size":546,"mtime":1610694037512,"results":"23","hashOfConfig":"14"},{"size":485,"mtime":1610955096390,"results":"24","hashOfConfig":"14"},{"size":77,"mtime":1611589136054,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1n3q3m",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/index.js",[],["53","54"],"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/App.js",[],"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/HomePage.js",[],"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/Login.js",["55","56"],"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/AddGame.js",[],"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/Register.js",[],"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/SearchGame.js",["57","58"],"import React, {useEffect, useState} from 'react'\nimport axios from 'axios';\n\n\nexport default function SearchGame() {\n    const [display, setDisplay] = useState(true);\n    const [containerDisplay, setContainerDisplay]= useState(false);\n    const [options, setOptions] = useState([]);\n    const[gamesList,setGames] =useState([]);\n\n    \n    function handleSearchInput(e){\n        const search_result = e.target.value;\n        axios.get(`https://api.rawg.io/api/games?key=a0200251f0824f9291c541b963f86c46&page_size=10&search=${search_result}`).then(res=>{\n            const data = res.data.results;\n            setOptions(data);\n            setDisplay(true)\n            setContainerDisplay(false);\n        })\n    }\n    return (\n        <div>\n            <div className=\"d-flex justify-content-center\">\n                <h1 style={{marginTop: '15px', fontFamily: \"'Source Serif Pro', serif\", fontSize: '30px'}}>Search for a game</h1>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n                <form className=\"form-inline my-2 my-lg-0\">\n                    <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Enter game name...\" aria-label=\"Search\" onChange={handleSearchInput}/>\n                </form>\n            </div>\n            {display &&(\n            <div className= \"d-flex justify-content-center\" >\n                <div style={{\"width\": \"300px\",\"padding-left\":\"50px\"}}>\n                    {options.map(res=>{\n                        return <h6 style={{\"cursor\":\"pointer\"}} onClick={e =>{\n                            e.preventDefault();\n                            const title_result = res.name;\n                            setDisplay(false);\n                            setContainerDisplay(true);\n                            axios.get(`/api/get-offer/${title_result}`).then(result=>{\n                                let games = result.data;\n                                setGames(games)\n                            })\n                        }}>{res.name}</h6>\n                    })}\n                </div>\n            </div>)}\n            <div className=\"d-flex justify-content-center\">  \n            { gamesList.length>0 || !containerDisplay ?\n            <div>\n            {gamesList.map(selectedGame=>\n            <div className=\"d-flex justify-content-center\">\n            <div className=\"card h-100\" style={{\"width\": \"18rem\", \"marginTop\" : \"20px\"}}>\n                <img className=\"card-img-top\" src={selectedGame.game.picture} alt=\"Card image cap\"/>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{selectedGame.game.title}</h5>\n                        <p className=\"card-text\">Category : {selectedGame.game.category}</p>\n                        <p className=\"card-text\">User : {selectedGame.user.firstName}</p>\n                        <p className=\"card-text\">Rating : {selectedGame.game.rating}</p>\n                    </div>\n            </div>\n            </div>)}\n            </div>\n            :\n            <h1>Sorry we don't have this game</h1>}\n            </div>  \n        </div>\n    )\n}\n","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/Navbar.js",[],"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/UserProfile.js",["59","60","61","62"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport '../UserProfile.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faPhone,\n  faMapMarkerAlt,\n  faEnvelope,\n  faDesktop,\n  faGamepad,\n} from '@fortawesome/free-solid-svg-icons';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport ActiveOffers from './ActiveOffers';\nimport Modal from 'react-modal';\nimport EditableFields from './EditableFields';\n\nfunction UserProfile() {\n  library.add(faPhone, faMapMarkerAlt, faEnvelope, faDesktop, fab, faGamepad);\n  const [user, setUser] = useState({\n    activeOffers: [],\n    console: '',\n  });\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [inputIsEditable, setInputIsEditable] = useState(false);\n  const [consoleList, setConsoleList] = useState([]);\n  const [activeOffers, setActiveOffers] = useState([]);\n  const [updatedUserInformation, setUpdatedUserInformation] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    town: '',\n    country: '',\n    console: '',\n  });\n\n  //   // ID will be found in session when session will be implemented\n  let id = 'a1912794-d361-471b-a851-92d565718277';\n\n  useEffect(() => {\n    fetchUserData(id);\n  }, [id]);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.rawg.io/api/platforms?key=d124f7e507b7487ba9faa3cc51bfaabf`\n      )\n      .then((response) => {\n        setConsoleList(response.data.results);\n      });\n  }, [inputIsEditable]);\n\n  useEffect(() => {\n    axios.get(`/api/get-active-offers-by-user-id/${id}`).then((response) => {\n      console.log(response.data);\n      setActiveOffers(response.data);\n    });\n  }, [])\n\n  function fetchUserData(id) {\n    axios.get(`/api/get-user-by-id/${id}`).then((response) => {\n      console.log(response);\n      setUser(response.data);\n    });\n  }\n\n  const setModalIsOpenToTrue = () => {\n    setModalIsOpen(true);\n  };\n\n  const setModalIsOpenToFalse = () => {\n    setModalIsOpen(false);\n  };\n\n  const modalCustomStyle = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n    },\n  };\n\n  const setEditProfileToTrue = () => {\n    setUpdatedUserInformation(user);\n    setInputIsEditable(true);\n  };\n\n  const setEditProfileToFalse = () => {\n    setInputIsEditable(false);\n    axios\n      .put(`api/update-user/${id}`, updatedUserInformation)\n      .then((response) => {\n        if (response.status === 201) {\n          console.log('User updated succesfully');\n          window.location.href = 'http://localhost:3000/profile';\n        }\n      });\n  };\n\n  const updateUserProfile = (value, key) => {\n    setUpdatedUserInformation({\n      ...updatedUserInformation,\n      [key]: value,\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"container main-container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"panel panel-default plain profile-panel\">\n              <div className=\"panel-heading white-content p-left p-right\"></div>\n              <div className=\"panel-body\">\n                <div className=\"container\">\n                  <div className=\"profile-avatar\">\n                    <img\n                      className=\"img-responsive\"\n                      src=\"https://bootdey.com/img/Content/avatar/avatar6.png\"\n                      alt=\"profile\"\n                    ></img>\n                  </div>\n                  <div className=\"container user-profile-container\">\n                    <div className=\"user-name\">\n                      <div className=\"user-name-container\">\n                        <EditableFields\n                          inputName=\"firstName\"\n                          userInfo={user.firstName}\n                          editable={inputIsEditable}\n                          updateField={updateUserProfile}\n                        ></EditableFields>\n                        <EditableFields\n                          inputName=\"lastName\"\n                          userInfo={user.lastName}\n                          editable={inputIsEditable}\n                          updateField={updateUserProfile}\n                        ></EditableFields>\n\n                        <div>\n                          {inputIsEditable === false ? (\n                            <button\n                              onClick={setEditProfileToTrue}\n                              className=\"btn btn-info\"\n                            >\n                              Edit Profile\n                            </button>\n                          ) : (\n                            <button\n                              onClick={setEditProfileToFalse}\n                              className=\"btn btn-success\"\n                            >\n                              Save Profile\n                            </button>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"user-information\">Short Description</div>\n                    <div className=\"profile-stats-info\">\n                      <div>\n                        <a\n                          onClick={setModalIsOpenToTrue}\n                          style={{ cursor: 'pointer' }}\n                        >\n                          Active Offers: <strong>{activeOffers.length}</strong>\n                        </a>\n                        <Modal isOpen={modalIsOpen} style={modalCustomStyle}>\n                          <button onClick={setModalIsOpenToFalse}>x</button>\n                          <ActiveOffers offers={activeOffers}></ActiveOffers>\n                        </Modal>\n                      </div>\n                      <div>\n                        <a href=\"#\" title=\"Comments\">\n                          Rating:\n                          <strong>10</strong>\n                        </a>\n                      </div>\n                      <div>\n                        <a href=\"#\" title=\"Likes\">\n                          Completed Deals:\n                          <strong>4</strong>\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"panel-footer white-content\">\n                <div className=\"user-contact\">\n                  <ul className=\"profile-info\">\n                    <div className=\"li-container\">\n                      <li>\n                        <FontAwesomeIcon icon=\"phone\"></FontAwesomeIcon>\n                        <EditableFields\n                          inputName=\"phone\"\n                          userInfo={user.phone}\n                          editable={inputIsEditable}\n                          updateField={updateUserProfile}\n                        ></EditableFields>\n                      </li>\n                    </div>\n                    <div className=\"li-container\">\n                      <li>\n                        <FontAwesomeIcon icon=\"map-marker-alt\"></FontAwesomeIcon>\n                        <EditableFields\n                          inputName=\"town\"\n                          userInfo={user.town}\n                          editable={inputIsEditable}\n                          updateField={updateUserProfile}\n                        ></EditableFields>\n                        ,\n                        <EditableFields\n                          inputName=\"country\"\n                          userInfo={user.country}\n                          editable={inputIsEditable}\n                          updateField={updateUserProfile}\n                        ></EditableFields>\n                      </li>\n                    </div>\n                    <div className=\"li-container\">\n                      <li>\n                        <FontAwesomeIcon icon=\"envelope\"></FontAwesomeIcon>\n                        <EditableFields\n                          inputName=\"email\"\n                          userInfo={user.email}\n                          editable={inputIsEditable}\n                          updateField={updateUserProfile}\n                        ></EditableFields>\n                      </li>\n                    </div>\n                    <div className=\"li-container\">\n                      <li>\n                        <FontAwesomeIcon icon=\"gamepad\"></FontAwesomeIcon>\n                        {inputIsEditable ? (\n                          <select\n                            className=\"dropdown-select\"\n                            required\n                            onChange={(e) => {\n                              updateUserProfile(e.target.value, 'console');\n                            }}\n                          >\n                            <option>{user.console}</option>\n                            {consoleList.map((console, index) => {\n                              return (\n                                <option key={index} value={console.name}>\n                                  {console.name}\n                                </option>\n                              );\n                            })}\n                          </select>\n                        ) : (\n                          <div style={{ marginLeft: '10px' }}>\n                            {user.console}\n                          </div>\n                        )}\n                      </li>\n                    </div>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserProfile;\n","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/ActiveOffers.js",[],"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/EditableFields.js",[],"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/Logout.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":27,"nodeType":"69","messageId":"70","endLine":1,"endColumn":36},{"ruleId":"67","severity":1,"message":"71","line":12,"column":10,"nodeType":"69","messageId":"70","endLine":12,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":1,"column":16,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"72","severity":1,"message":"73","line":54,"column":17,"nodeType":"74","endLine":54,"endColumn":101},{"ruleId":"75","severity":1,"message":"76","line":61,"column":6,"nodeType":"77","endLine":61,"endColumn":8,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":168,"column":25,"nodeType":"74","endLine":171,"endColumn":26},{"ruleId":"79","severity":1,"message":"81","line":180,"column":25,"nodeType":"74","endLine":180,"endColumn":54},{"ruleId":"79","severity":1,"message":"81","line":186,"column":25,"nodeType":"74","endLine":186,"endColumn":51},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'loggedIn' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["84"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [id]",{"range":"87","text":"88"},[1776,1778],"[id]"]