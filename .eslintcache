[{"/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/index.js":"1","/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/App.js":"2","/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/Register.js":"3","/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/Navbar.js":"4","/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/HomePage.js":"5","/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/UserProfile.js":"6","/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/UserContext.js":"7","/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/Login.js":"8","/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/SearchGame.js":"9","/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/AddGame.js":"10","/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/ActiveOffers.js":"11","/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/Logout.js":"12","/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/EditableFields.js":"13","/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/SearchGameToOffer.js":"14","/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/GameCard.js":"15"},{"size":197,"mtime":1610611795428,"results":"16","hashOfConfig":"17"},{"size":1080,"mtime":1611751271823,"results":"18","hashOfConfig":"17"},{"size":9184,"mtime":1612987624986,"results":"19","hashOfConfig":"17"},{"size":1293,"mtime":1611751271836,"results":"20","hashOfConfig":"17"},{"size":735,"mtime":1611751271833,"results":"21","hashOfConfig":"17"},{"size":10493,"mtime":1611828823189,"results":"22","hashOfConfig":"17"},{"size":839,"mtime":1611695990780,"results":"23","hashOfConfig":"17"},{"size":4242,"mtime":1613030456239,"results":"24","hashOfConfig":"17"},{"size":3971,"mtime":1612944527758,"results":"25","hashOfConfig":"17"},{"size":6075,"mtime":1612775944771,"results":"26","hashOfConfig":"17"},{"size":546,"mtime":1610957502808,"results":"27","hashOfConfig":"17"},{"size":77,"mtime":1611655353168,"results":"28","hashOfConfig":"17"},{"size":485,"mtime":1610957514827,"results":"29","hashOfConfig":"17"},{"size":5719,"mtime":1612944527759,"results":"30","hashOfConfig":"17"},{"size":1860,"mtime":1612944527756,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"18ahcrw",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/index.js",[],["66","67"],"/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/App.js",[],"/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/Register.js",[],"/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/Navbar.js",[],"/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/HomePage.js",[],"/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/UserProfile.js",["68","69","70","71","72"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport React, { useContext } from 'react';\nimport { useState, useEffect } from 'react';\nimport '../UserProfile.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faPhone,\n  faMapMarkerAlt,\n  faEnvelope,\n  faDesktop,\n  faGamepad,\n} from '@fortawesome/free-solid-svg-icons';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport ActiveOffers from './ActiveOffers';\nimport Modal from 'react-modal';\nimport EditableFields from './EditableFields';\nimport { UserContext } from './UserContext';\n\nfunction UserProfile() {\n  const value = useContext(UserContext);\n\n  library.add(faPhone, faMapMarkerAlt, faEnvelope, faDesktop, fab, faGamepad);\n  const [user, setUser] = useState({\n    activeOffers: [],\n    console: '',\n  });\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [inputIsEditable, setInputIsEditable] = useState(false);\n  const [consoleList, setConsoleList] = useState([]);\n  const [activeOffers, setActiveOffers] = useState([]);\n  const [updatedUserInformation, setUpdatedUserInformation] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    town: '',\n    country: '',\n    console: '',\n  });\n  const [userAvatar, setUserAvatar] = useState();\n\n  //   // ID will be found in session when session will be implemented\n  let id = value.userId;\n\n  useEffect(() => {\n    fetchUserData(id);\n  }, [id]);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.rawg.io/api/platforms?key=d124f7e507b7487ba9faa3cc51bfaabf`\n      )\n      .then((response) => {\n        setConsoleList(response.data.results);\n      });\n  }, [inputIsEditable]);\n\n  useEffect(() => {\n    axios\n      .get(`/api/get-active-offers-by-user-id/${id}`, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      })\n      .then((response) => {\n        setActiveOffers(response.data);\n      });\n  }, []);\n\n  function fetchUserData(id) {\n    axios\n      .get(`/api/get-user-by-id/${id}`, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      })\n      .then((response) => {\n        setUser(response.data);\n        generateUserAvatar(response.data.firstName, response.data.lastName);\n      });\n  }\n\n  function generateUserAvatar(firstName, lastName) {\n    console.log(firstName, lastName);\n    axios\n      .get(`https://eu.ui-avatars.com/api/?name=${firstName}+${lastName}`)\n      .then((response) => {\n        setUserAvatar(response.config.url);\n        console.log(response);\n      });\n  }\n\n  const setModalIsOpenToTrue = () => {\n    setModalIsOpen(true);\n  };\n\n  const setModalIsOpenToFalse = () => {\n    setModalIsOpen(false);\n  };\n\n  const modalCustomStyle = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n    },\n  };\n\n  const setEditProfileToTrue = () => {\n    setUpdatedUserInformation(user);\n    setInputIsEditable(true);\n  };\n\n  const setEditProfileToFalse = () => {\n    setInputIsEditable(false);\n    axios\n      .put(`api/update-user/${id}`, updatedUserInformation, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      })\n      .then((response) => {\n        if (response.status === 201) {\n          console.log('User updated succesfully');\n          setUser({ ...updatedUserInformation });\n          generateUserAvatar(\n            updatedUserInformation.firstName,\n            updatedUserInformation.lastName\n          );\n        }\n      });\n  };\n\n  const updateUserProfile = (value, key) => {\n    setUpdatedUserInformation({\n      ...updatedUserInformation,\n      [key]: value,\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"container main-container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"panel panel-default plain profile-panel\">\n              <div className=\"panel-body\">\n                <div className=\"container\">\n                  <div className=\"profile-avatar\">\n                    <img\n                      className=\"img-responsive\"\n                      src={userAvatar}\n                      alt=\"profile\"\n                    ></img>\n                  </div>\n                  <div className=\"container user-profile-container\">\n                    <div className=\"user-name\">\n                      <div className=\"user-name-container\">\n                        <EditableFields\n                          inputName=\"firstName\"\n                          userInfo={user.firstName}\n                          editable={inputIsEditable}\n                          updateField={updateUserProfile}\n                        ></EditableFields>\n                        <EditableFields\n                          inputName=\"lastName\"\n                          userInfo={user.lastName}\n                          editable={inputIsEditable}\n                          updateField={updateUserProfile}\n                        ></EditableFields>\n\n                        <div>\n                          {inputIsEditable === false ? (\n                            <button\n                              onClick={setEditProfileToTrue}\n                              className=\"btn btn-info\"\n                            >\n                              Edit Profile\n                            </button>\n                          ) : (\n                            <button\n                              onClick={setEditProfileToFalse}\n                              className=\"btn btn-special\"\n                            >\n                              Save Profile\n                            </button>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"user-information\">Short Description</div>\n                    <div className=\"profile-stats-info\">\n                      <div>\n                        <a\n                          onClick={setModalIsOpenToTrue}\n                          style={{ cursor: 'pointer' }}\n                        >\n                          Active Offers: <strong>{activeOffers.length}</strong>\n                        </a>\n                        <Modal isOpen={modalIsOpen} style={modalCustomStyle}>\n                          <button onClick={setModalIsOpenToFalse}>x</button>\n                          <ActiveOffers offers={activeOffers}></ActiveOffers>\n                        </Modal>\n                      </div>\n                      <div>\n                        <a href=\"#\" title=\"Comments\">\n                          Rating:\n                          <strong>10</strong>\n                        </a>\n                      </div>\n                      <div>\n                        <a href=\"#\" title=\"Likes\">\n                          Completed Deals:\n                          <strong>4</strong>\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"panel-footer white-content\">\n                <div className=\"user-contact\">\n                  <ul className=\"profile-info\">\n                    <div className=\"li-container\">\n                      <li>\n                        <FontAwesomeIcon icon=\"phone\"></FontAwesomeIcon>\n                        <EditableFields\n                          inputName=\"phone\"\n                          userInfo={user.phone}\n                          editable={inputIsEditable}\n                          updateField={updateUserProfile}\n                        ></EditableFields>\n                      </li>\n                    </div>\n                    <div className=\"li-container\">\n                      <li>\n                        <FontAwesomeIcon icon=\"map-marker-alt\"></FontAwesomeIcon>\n                        <EditableFields\n                          inputName=\"town\"\n                          userInfo={user.town}\n                          editable={inputIsEditable}\n                          updateField={updateUserProfile}\n                        ></EditableFields>\n                        ,\n                        <EditableFields\n                          inputName=\"country\"\n                          userInfo={user.country}\n                          editable={inputIsEditable}\n                          updateField={updateUserProfile}\n                        ></EditableFields>\n                      </li>\n                    </div>\n                    <div className=\"li-container\">\n                      <li>\n                        <FontAwesomeIcon icon=\"envelope\"></FontAwesomeIcon>\n                        <EditableFields\n                          inputName=\"email\"\n                          userInfo={user.email}\n                          editable={inputIsEditable}\n                          updateField={updateUserProfile}\n                        ></EditableFields>\n                      </li>\n                    </div>\n                    <div className=\"li-container\">\n                      <li>\n                        <FontAwesomeIcon icon=\"gamepad\"></FontAwesomeIcon>\n                        {inputIsEditable ? (\n                          <select\n                            className=\"dropdown-select\"\n                            required\n                            onChange={(e) => {\n                              updateUserProfile(e.target.value, 'console');\n                            }}\n                          >\n                            <option>{user.console}</option>\n                            {consoleList.map((console, index) => {\n                              return (\n                                <option key={index} value={console.name}>\n                                  {console.name}\n                                </option>\n                              );\n                            })}\n                          </select>\n                        ) : (\n                          <div style={{ marginLeft: '10px' }}>\n                            {user.console}\n                          </div>\n                        )}\n                      </li>\n                    </div>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserProfile;\n","/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/UserContext.js",[],"/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/Login.js",["73","74"],"/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/SearchGame.js",["75"],"import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport GameCard from '../components/GameCard';\nimport { UserContext } from './UserContext';\n\nexport default function SearchGame() {\n  const [display, setDisplay] = useState(true);\n  const [containerDisplay, setContainerDisplay] = useState(false);\n  const [showComponent, setShowComponent] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [gamesList, setGamesList] = useState([]);\n  const [offerId, setOfferId] = useState();\n  const user = useContext(UserContext);\n\n  function handleSearchInput(e) {\n    const search_result = e.target.value;\n    axios\n      .get(\n        `https://api.rawg.io/api/games?key=a0200251f0824f9291c541b963f86c46&page_size=5&search=${search_result}`,\n        {\n          params: {\n            search_exact: false,\n            search_precise: true,\n          },\n        }\n      )\n      .then((res) => {\n        const data = res.data.results;\n        setOptions(data);\n        setDisplay(true);\n        setContainerDisplay(false);\n      });\n  }\n\n  function openMakeAnOfferComponent(gameID) {\n    if (user) {\n      setShowComponent(!showComponent);\n      document.getElementById('makeAnOffer').hidden = true;\n      setOfferId(gameID);\n    } else {\n      window.location.href = 'http://localhost:3000/login';\n    }\n  }\n\n  function handleBrowseDBClick() {\n    axios.get('/api/offers').then((data) => {\n      console.log(data);\n      setGamesList(data.data);\n    });\n  }\n\n  return (\n    <>\n      <div className=\"d-flex justify-content-center\">\n        <h1 style={{ marginTop: '15px', fontSize: '30px' }}>\n          Search for a game\n        </h1>\n      </div>\n\n      <div>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            marginTop: '20px',\n          }}\n        >\n          <button\n            className=\"btn btn-special\"\n            style={{ width: '251px', height: '38px' }}\n            onClick={handleBrowseDBClick}\n          >\n            See available offers\n          </button>\n        </div>\n      </div>\n      <h3\n        style={{\n          textAlign: 'center',\n          margin: '20px',\n        }}\n      >\n        OR\n      </h3>\n\n      <div className=\"d-flex justify-content-center\">\n        <form className=\"form-inline my-2 my-lg-0\">\n          <input\n            className=\"form-control mr-sm-2\"\n            type=\"search\"\n            placeholder=\"Enter game name...\"\n            aria-label=\"Search\"\n            onChange={handleSearchInput}\n          />\n        </form>\n      </div>\n\n      {display && (\n        <div className=\"d-flex justify-content-center\">\n          <div style={{ width: '300px', 'padding-left': '50px' }}>\n            {options.map((res) => {\n              return (\n                <h6\n                  style={{ cursor: 'pointer' }}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    const title_result = res.name;\n                    setDisplay(false);\n                    setContainerDisplay(true);\n                    axios\n                      .get(`/api/get-offer/${title_result}`)\n                      .then((result) => {\n                        let games = result.data;\n                        setGamesList(games);\n                      });\n                  }}\n                >\n                  {res.name}\n                </h6>\n              );\n            })}\n          </div>\n        </div>\n      )}\n      <div className=\"d-flex justify-content-center\">\n        {gamesList.length > 0 || !containerDisplay ? (\n          <GameCard\n            gamesList={gamesList}\n            openMakeAnOfferComponent={openMakeAnOfferComponent}\n            showComponent={showComponent}\n            offerId={offerId}\n          ></GameCard>\n        ) : (\n          <h1 className=\"no-games-message\">\n            Sorry, there are no offers available\n          </h1>\n        )}\n      </div>\n    </>\n  );\n}\n","/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/AddGame.js",[],"/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/ActiveOffers.js",[],"/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/Logout.js",[],"/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/EditableFields.js",[],"/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/SearchGameToOffer.js",["76","77"],"import React, { useContext, useEffect, useState } from 'react';\nimport { UserContext } from './UserContext';\nimport axios from 'axios';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\n\nfunction SearchGameToOffer({ offerId }) {\n  const value = useContext(UserContext);\n  const userId = value.userId;\n  const [searchedGameList, setSearchedGameList] = useState([]);\n  const [activeUser, setActiveUser] = useState({});\n\n  const [deal, setDeal] = useState({\n    userWhoSent: {},\n    gameSent: {},\n    userWhoReceived: {},\n    gameWhoReceived: {},\n    date: Date.now(),\n  });\n\n  //the game that user will like to offer (to send)\n  const [selectedGame, setSelectedGame] = useState({});\n\n  //the game that user wishes to purchase\n  const [desiredGame, setDesiredGame] = useState({});\n  const [nonActiveUser, setNonActiveUser] = useState({});\n  const [consoleList, setConsoleList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [gameToAddToDeal, setGameToAddToDeal] = useState({});\n  const [offerToAdd, setOfferToAdd] = useState({\n    game: {\n      title: '',\n      platform: '',\n      picture: '',\n      category: '',\n      rating: '',\n    },\n    description: '',\n  });\n\n\n\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.rawg.io/api/platforms?key=d124f7e507b7487ba9faa3cc51bfaabf`\n      )\n      .then((response) => {\n        setConsoleList(response.data.results);\n      });\n    axios\n      .get(`/api/get-user-by-id/${userId}`, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      })\n      .then((response) => {\n        setActiveUser(response.data);\n      });\n    axios\n      .get(`/api/offer-by-id/${offerId}`, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      })\n      .then((response) => {\n        setDesiredGame(response.data.game);\n        setNonActiveUser(response.data.user);\n        setIsLoading(false);\n      });\n  }, [isLoading]);\n\n\n\n\n\n  const handleChange = (e) => {\n    axios\n      .get(\n        `https://api.rawg.io/api/games?key=d124f7e507b7487ba9faa3cc51bfaabf&search=${e.target.value}`,\n        {\n          params: {\n            page_size: 5,\n            search_exact: false,\n            search_precise: true,\n          },\n        }\n      )\n      .then((response) => {\n        setSearchedGameList(response.data.results);\n      });\n  };\n\n\nconst handleOnTitleClick = (GameTitle,gameID) => {\n    checkDatabaseForGame(GameTitle,gameID)\n    console.log(selectedGame)\n}\n\n\nconst checkDatabaseForGame=(gameTitle,gameId)=>{\n    axios\n        .get(`/api/get-game/${gameTitle}`,{\n            headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('token')}\n        })\n        .then((response)=>{\n            console.log(response.data)\n           if(response.status === 404){\n            axios\n                .get(`https://api.rawg.io/api/games/${gameId}`)\n                .then((response) => {\n                    setSelectedGame(response.data);\n                    document.getElementById('gameCard').hidden = true;\n                    document.getElementById('searchBar').hidden = true;\n                })\n                .then(()=>{\n                    axios\n                    .post(`/api/add-game/`, selectedGame, {\n                      headers: {\n                        Authorization: 'Bearer ' + localStorage.getItem('token'),\n                      },\n                    })\n                });\n    }else{\n        console.log(\"found\")\n    }\n    })\n\n\n}\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const s = { ...offerToAdd };\n    s.game.title = selectedGame.name;\n    s.game.picture = selectedGame.background_image;\n    s.game.category = selectedGame.genres[0].name;\n    s.game.rating = selectedGame.rating;\n    setOfferToAdd(s);\n\n    axios\n      .post(`/api/add-offer/${userId}`, offerToAdd, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      })\n      .then((response) => {\n        if (response.status === 201) {\n          axios\n            .get(`/api/get-offer/${response.data.title}`, {\n              headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token'),\n              },\n            })\n            .then(() => {\n              setGameToAddToDeal(response.data.game);\n              const c = { ...deal };\n              console.log(gameToAddToDeal);\n              c.gameSent = gameToAddToDeal;\n              setDeal(c);\n              axios\n                .post(`/api/add-deal`, deal, {\n                  headers: {\n                    Authorization: 'Bearer ' + localStorage.getItem('token'),\n                  },\n                })\n                .then((response) => {\n                  console.log(response.status);\n                });\n            });\n        }\n      });\n  };\n\n  return (\n    <>\n      <div className=\"trade-page-container\">\n        <div className=\"d-flex justify-content-center offer-card\">\n          <div\n            className=\"card h-100\"\n            style={{ width: '18rem', marginTop: '20px' }}\n          >\n            <h4 style={{ marginTop: '15px' }}>\n              <i>Your offer: </i>\n            </h4>\n            <form className=\"form-inline my-2 my-lg-0\">\n              <input\n                className=\"form-control mr-sm-2\"\n                id=\"searchBar\"\n                type=\"search\"\n                placeholder=\"Enter game name...\"\n                aria-label=\"Search\"\n                onChange={handleChange}\n              />\n            </form>\n            <div className=\"d-flex justify-content-center\">\n              <ul id=\"gameCard\" className=\"search-container\">\n                {searchedGameList.map((game, index) => {\n                  return (\n                    <p key={index}>\n                      <div\n                        style={{ cursor: 'pointer' }}\n                        onClick={()=> handleOnTitleClick(game.name,game.id)}\n                        //     {\n                        //   axios\n                        //     .get(`https://api.rawg.io/api/games/${game.id}`)\n                        //     .then((response) => {\n                        //       setSelectedGame(response.data);\n                        //       document.getElementById('gameCard').hidden = true;\n                        //       document.getElementById(\n                        //         'searchBar'\n                        //       ).hidden = true;\n                        //     });\n                        // }\n                      >\n                        {game.name}\n                      </div>\n                    </p>\n                  );\n                })}\n              </ul>\n            </div>\n            {selectedGame.background_image ? (\n              <img\n                className=\"card-img-top\"\n                src={selectedGame.background_image}\n                alt=\"background-game\"\n              />\n            ) : null}\n\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{selectedGame.name}</h5>\n              <p className=\"card-text\">\n                Release year : {selectedGame.released}\n              </p>\n              <div className=\"input-group mb-3\" style={{ marginTop: '15px' }}>\n                <select\n                  className=\"custom-select\"\n                  id=\"inputGroupSelect01\"\n                  required\n                  onChange={(e) => {\n                    const s = { ...deal };\n                    s.userWhoSent = activeUser;\n                    s.userWhoReceived = nonActiveUser;\n                    s.gameWhoReceived = desiredGame;\n                    setDeal(s);\n                  }}\n                >\n                  <option defaultValue=\"\">Select platform...</option>\n                  {consoleList.map((console, index) => {\n                    return (\n                      <option key={index} value={console.name}>\n                        {console.name}\n                      </option>\n                    );\n                  })}\n                </select>\n              </div>\n\n              <button\n                className=\"btn btn-outline-primary\"\n                onClick={handleSubmit}\n              >\n                Submit Offer\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default SearchGameToOffer;\n","/Users/mihaicaragea/Desktop/Projects/Advance/switch-play-frontend/src/components/GameCard.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":48,"column":6,"nodeType":"84","endLine":48,"endColumn":10,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"86","line":70,"column":6,"nodeType":"84","endLine":70,"endColumn":8,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":200,"column":25,"nodeType":"90","endLine":203,"endColumn":26},{"ruleId":"88","severity":1,"message":"91","line":212,"column":25,"nodeType":"90","endLine":212,"endColumn":54},{"ruleId":"88","severity":1,"message":"91","line":218,"column":25,"nodeType":"90","endLine":218,"endColumn":51},{"ruleId":"92","severity":1,"message":"93","line":1,"column":27,"nodeType":"94","messageId":"95","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"96","line":11,"column":10,"nodeType":"94","messageId":"95","endLine":11,"endColumn":18},{"ruleId":"92","severity":1,"message":"93","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"92","severity":1,"message":"97","line":4,"column":10,"nodeType":"94","messageId":"95","endLine":4,"endColumn":22},{"ruleId":"82","severity":1,"message":"98","line":71,"column":6,"nodeType":"84","endLine":71,"endColumn":17,"suggestions":"99"},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUserData'. Either include it or remove the dependency array.","ArrayExpression",["102"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["103"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'loggedIn' is assigned a value but never used.","'faSignOutAlt' is defined but never used.","React Hook useEffect has missing dependencies: 'offerId' and 'userId'. Either include them or remove the dependency array.",["104"],"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [fetchUserData, id]",{"range":"111","text":"112"},"Update the dependencies array to be: [id]",{"range":"113","text":"114"},"Update the dependencies array to be: [isLoading, offerId, userId]",{"range":"115","text":"116"},[1470,1474],"[fetchUserData, id]",[1996,1998],"[id]",[1991,2002],"[isLoading, offerId, userId]"]