[{"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/index.js":"1","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/App.js":"2","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/Navbar.js":"3","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/SearchGame.js":"4","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/UserProfile.js":"5","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/UserContext.js":"6","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/RecievedDeals.js":"7","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/AddGame.js":"8","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/HomePage.js":"9","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/review/UserRating.js":"10","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/Register.js":"11","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/Login.js":"12","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/inbox/Inbox.js":"13","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/review/AddReview.js":"14","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/GameCard.js":"15","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/Logout.js":"16","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/ActiveOffers.js":"17","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/EditableFields.js":"18","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/inbox/MessageSection.js":"19","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/SearchGameToOffer.js":"20"},{"size":197,"mtime":1610623156295,"results":"21","hashOfConfig":"22"},{"size":1605,"mtime":1614324758520,"results":"23","hashOfConfig":"22"},{"size":1529,"mtime":1613113081829,"results":"24","hashOfConfig":"22"},{"size":4451,"mtime":1614324758523,"results":"25","hashOfConfig":"22"},{"size":10574,"mtime":1614324758524,"results":"26","hashOfConfig":"22"},{"size":839,"mtime":1611655527931,"results":"27","hashOfConfig":"22"},{"size":1816,"mtime":1614324758522,"results":"28","hashOfConfig":"22"},{"size":6075,"mtime":1614324758520,"results":"29","hashOfConfig":"22"},{"size":735,"mtime":1611768308051,"results":"30","hashOfConfig":"22"},{"size":7230,"mtime":1614329246189,"results":"31","hashOfConfig":"22"},{"size":9184,"mtime":1613031091145,"results":"32","hashOfConfig":"22"},{"size":4242,"mtime":1611903631312,"results":"33","hashOfConfig":"22"},{"size":3010,"mtime":1614324789147,"results":"34","hashOfConfig":"22"},{"size":4525,"mtime":1614329119423,"results":"35","hashOfConfig":"22"},{"size":2417,"mtime":1614324758521,"results":"36","hashOfConfig":"22"},{"size":77,"mtime":1611646704977,"results":"37","hashOfConfig":"22"},{"size":946,"mtime":1613030342969,"results":"38","hashOfConfig":"22"},{"size":485,"mtime":1610917447031,"results":"39","hashOfConfig":"22"},{"size":1410,"mtime":1614328809116,"results":"40","hashOfConfig":"22"},{"size":5769,"mtime":1614324758524,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"vyz7t5",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/index.js",[],["88","89"],"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/App.js",[],"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/Navbar.js",[],"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/SearchGame.js",["90"],"import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport GameCard from '../components/GameCard';\nimport { UserContext } from './UserContext';\nimport MessageSection from './inbox/MessageSection';\n\nexport default function SearchGame() {\n  const [display, setDisplay] = useState(true);\n  const [containerDisplay, setContainerDisplay] = useState(false);\n  const [showComponent, setShowComponent] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [gamesList, setGamesList] = useState([]);\n  const [offerId, setOfferId] = useState();\n  const user = useContext(UserContext);\n  const [messageModal, setMessageModal]=useState(false);\n  const [userToSendMessage, setUserToSendMessage]=useState({id:'',\n    firstName:''\n  })\n\n  function handleSearchInput(e) {\n    const search_result = e.target.value;\n    axios\n      .get(\n        `https://api.rawg.io/api/games?key=a0200251f0824f9291c541b963f86c46&page_size=5&search=${search_result}`,\n        {\n          params: {\n            search_exact: false,\n            search_precise: true,\n          },\n        }\n      )\n      .then((res) => {\n        const data = res.data.results;\n        setOptions(data);\n        setDisplay(true);\n        setContainerDisplay(false);\n      });\n  }\n\n  function openMakeAnOfferComponent(gameID) {\n    if (user) {\n      setShowComponent(!showComponent);\n      document.getElementById('makeAnOffer').hidden = true;\n      setOfferId(gameID);\n    } else {\n      window.location.href = 'http://localhost:3000/login';\n    }\n  }\n\n  function handleBrowseDBClick() {\n    axios.get('/api/offers').then((data) => {\n      console.log(data);\n      setGamesList(data.data);\n    });\n  }\n\n  return (\n    <>\n      <div className=\"d-flex justify-content-center\">\n        <h1 style={{ marginTop: '15px', fontSize: '30px' }}>\n          Search for a game\n        </h1>\n      </div>\n\n      <div>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            marginTop: '20px',\n          }}\n        >\n          <button\n            className=\"btn btn-special\"\n            style={{ width: '251px', height: '38px' }}\n            onClick={handleBrowseDBClick}\n          >\n            See available offers\n          </button>\n        </div>\n      </div>\n      <h3\n        style={{\n          textAlign: 'center',\n          margin: '20px',\n        }}\n      >\n        OR\n      </h3>\n\n      <div className=\"d-flex justify-content-center\">\n        <form className=\"form-inline my-2 my-lg-0\">\n          <input\n            className=\"form-control mr-sm-2\"\n            type=\"search\"\n            placeholder=\"Enter game name...\"\n            aria-label=\"Search\"\n            onChange={handleSearchInput}\n          />\n        </form>\n      </div>\n\n      {display && (\n        <div className=\"d-flex justify-content-center\">\n          <div style={{ width: '300px', 'padding-left': '50px' }}>\n            {options.map((res) => {\n              return (\n                <h6\n                  style={{ cursor: 'pointer' }}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    const title_result = res.name;\n                    setDisplay(false);\n                    setContainerDisplay(true);\n                    axios\n                      .get(`/api/get-offer/${title_result}`)\n                      .then((result) => {\n                        let games = result.data;\n                        setGamesList(games);\n                      });\n                  }}\n                >\n                  {res.name}\n                </h6>\n              );\n            })}\n          </div>\n        </div>\n      )}\n      <div className=\"d-flex justify-content-center\">\n        {gamesList.length > 0 || !containerDisplay ? (\n          <GameCard\n            gamesList={gamesList}\n            openMakeAnOfferComponent={openMakeAnOfferComponent}\n            showComponent={showComponent}\n            offerId={offerId}\n            setMessageModal={setMessageModal}\n            UserToSendMessage={userToSendMessage}\n            setUserToSendMessage={setUserToSendMessage}\n          ></GameCard>\n        ) : (\n          <h1 className=\"no-games-message\">\n            Sorry, there are no offers available\n          </h1>\n        )}\n      </div>\n      {messageModal &&<MessageSection userToSendMessage={userToSendMessage} SetMessageModal={setMessageModal}></MessageSection>}\n    </>\n  );\n}\n","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/UserProfile.js",["91","92","93","94","95"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport React, { useContext } from 'react';\nimport { useState, useEffect } from 'react';\nimport '../UserProfile.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faPhone,\n  faMapMarkerAlt,\n  faEnvelope,\n  faDesktop,\n  faGamepad,\n} from '@fortawesome/free-solid-svg-icons';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport ActiveOffers from './ActiveOffers';\nimport Modal from 'react-modal';\nimport EditableFields from './EditableFields';\nimport { UserContext } from './UserContext';\n\nfunction UserProfile() {\n  const value = useContext(UserContext);\n\n  library.add(faPhone, faMapMarkerAlt, faEnvelope, faDesktop, fab, faGamepad);\n  const [user, setUser] = useState({\n    activeOffers: [],\n    console: '',\n  });\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [inputIsEditable, setInputIsEditable] = useState(false);\n  const [consoleList, setConsoleList] = useState([]);\n  const [activeOffers, setActiveOffers] = useState([]);\n  const [updatedUserInformation, setUpdatedUserInformation] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    town: '',\n    country: '',\n    console: '',\n  });\n  const [userAvatar, setUserAvatar] = useState();\n\n  //   // ID will be found in session when session will be implemented\n  let id = value.userId;\n\n  useEffect(() => {\n    fetchUserData(id);\n  }, [id]);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.rawg.io/api/platforms?key=d124f7e507b7487ba9faa3cc51bfaabf`\n      )\n      .then((response) => {\n        setConsoleList(response.data.results);\n      });\n  }, [inputIsEditable]);\n\n  useEffect(() => {\n    axios\n      .get(`/api/get-active-offers-by-user-id/${id}`, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      })\n      .then((response) => {\n        setActiveOffers(response.data);\n      });\n  }, []);\n\n  function fetchUserData(id) {\n    axios\n      .get(`/api/get-user-by-id/${id}`, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      })\n      .then((response) => {\n        setUser(response.data);\n        generateUserAvatar(response.data.firstName, response.data.lastName);\n      });\n  }\n\n  function generateUserAvatar(firstName, lastName) {\n    console.log(firstName, lastName);\n    axios\n      .get(`https://eu.ui-avatars.com/api/?name=${firstName}+${lastName}`)\n      .then((response) => {\n        setUserAvatar(response.config.url);\n        console.log(response);\n      });\n  }\n\n  const setModalIsOpenToTrue = () => {\n    setModalIsOpen(true);\n  };\n\n  const setModalIsOpenToFalse = () => {\n    setModalIsOpen(false);\n  };\n\n  const modalCustomStyle = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n    },\n  };\n\n  const setEditProfileToTrue = () => {\n    setUpdatedUserInformation(user);\n    setInputIsEditable(true);\n  };\n\n  const setEditProfileToFalse = () => {\n    setInputIsEditable(false);\n    axios\n      .put(`api/update-user/${id}`, updatedUserInformation, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      })\n      .then((response) => {\n        if (response.status === 201) {\n          console.log('User updated succesfully');\n          setUser({ ...updatedUserInformation });\n          generateUserAvatar(\n            updatedUserInformation.firstName,\n            updatedUserInformation.lastName\n          );\n        }\n      });\n  };\n\n  const updateUserProfile = (value, key) => {\n    setUpdatedUserInformation({\n      ...updatedUserInformation,\n      [key]: value,\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"container main-container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"panel panel-default plain profile-panel\">\n              <div className=\"panel-body\">\n                <div className=\"container\">\n                  <div className=\"profile-avatar\">\n                    <img\n                      className=\"img-responsive\"\n                      src={userAvatar}\n                      alt=\"profile\"\n                    ></img>\n                  </div>\n                  <div className=\"container user-profile-container\">\n                    <div className=\"user-name\">\n                      <div className=\"user-name-container\">\n                        <EditableFields\n                          inputName=\"firstName\"\n                          userInfo={user.firstName}\n                          editable={inputIsEditable}\n                          updateField={updateUserProfile}\n                        ></EditableFields>\n                        <EditableFields\n                          inputName=\"lastName\"\n                          userInfo={user.lastName}\n                          editable={inputIsEditable}\n                          updateField={updateUserProfile}\n                        ></EditableFields>\n                        <div>\n                          {inputIsEditable === false ? (\n                            <button\n                              onClick={setEditProfileToTrue}\n                              className=\"btn btn-info\"\n                            >\n                              Edit Profile\n                            </button>\n                          ) : (\n                            <button\n                              onClick={setEditProfileToFalse}\n                              className=\"btn btn-special\"\n                            >\n                              Save Profile\n                            </button>\n                          )}\n                        </div>\n                      </div>\n                      <a href={`/user-rating/${value.userId}`}>See my reviews</a>\n                    </div>\n\n                    <div className=\"user-information\">Short Description</div>\n                    <div className=\"profile-stats-info\">\n                      <div>\n                        <a\n                          onClick={setModalIsOpenToTrue}\n                          style={{ cursor: 'pointer' }}\n                        >\n                          Active Offers: <strong>{activeOffers.length}</strong>\n                        </a>\n                        <Modal isOpen={modalIsOpen} style={modalCustomStyle}>\n                          <button onClick={setModalIsOpenToFalse}>x</button>\n                          <ActiveOffers offers={activeOffers}></ActiveOffers>\n                        </Modal>\n                      </div>\n                      <div>\n                        <a href=\"#\" title=\"Comments\">\n                          Rating:\n                          <strong>10</strong>\n                        </a>\n                      </div>\n                      <div>\n                        <a href=\"#\" title=\"Likes\">\n                          Completed Deals:\n                          <strong>4</strong>\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"panel-footer white-content\">\n                <div className=\"user-contact\">\n                  <ul className=\"profile-info\">\n                    <div className=\"li-container\">\n                      <li>\n                        <FontAwesomeIcon icon=\"phone\"></FontAwesomeIcon>\n                        <EditableFields\n                          inputName=\"phone\"\n                          userInfo={user.phone}\n                          editable={inputIsEditable}\n                          updateField={updateUserProfile}\n                        ></EditableFields>\n                      </li>\n                    </div>\n                    <div className=\"li-container\">\n                      <li>\n                        <FontAwesomeIcon icon=\"map-marker-alt\"></FontAwesomeIcon>\n                        <EditableFields\n                          inputName=\"town\"\n                          userInfo={user.town}\n                          editable={inputIsEditable}\n                          updateField={updateUserProfile}\n                        ></EditableFields>\n                        ,\n                        <EditableFields\n                          inputName=\"country\"\n                          userInfo={user.country}\n                          editable={inputIsEditable}\n                          updateField={updateUserProfile}\n                        ></EditableFields>\n                      </li>\n                    </div>\n                    <div className=\"li-container\">\n                      <li>\n                        <FontAwesomeIcon icon=\"envelope\"></FontAwesomeIcon>\n                        <EditableFields\n                          inputName=\"email\"\n                          userInfo={user.email}\n                          editable={inputIsEditable}\n                          updateField={updateUserProfile}\n                        ></EditableFields>\n                      </li>\n                    </div>\n                    <div className=\"li-container\">\n                      <li>\n                        <FontAwesomeIcon icon=\"gamepad\"></FontAwesomeIcon>\n                        {inputIsEditable ? (\n                          <select\n                            className=\"dropdown-select\"\n                            required\n                            onChange={(e) => {\n                              updateUserProfile(e.target.value, 'console');\n                            }}\n                          >\n                            <option>{user.console}</option>\n                            {consoleList.map((console, index) => {\n                              return (\n                                <option key={index} value={console.name}>\n                                  {console.name}\n                                </option>\n                              );\n                            })}\n                          </select>\n                        ) : (\n                          <div style={{ marginLeft: '10px' }}>\n                            {user.console}\n                          </div>\n                        )}\n                      </li>\n                    </div>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserProfile;\n","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/UserContext.js",[],"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/RecievedDeals.js",[],"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/AddGame.js",[],"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/HomePage.js",[],"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/review/UserRating.js",["96"],"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/Register.js",[],"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/Login.js",["97","98"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction Login() {\n  const [wrongCredentials, setWrongCredentials] = useState(false);\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n  });\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    axios\n      .post(`/api/login`, user, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      })\n      .then((response) => {\n        if (response.status === 200) {\n          setLoggedIn(true);\n          localStorage.setItem('token', response.data.token);\n          window.location.href = 'http://localhost:3000/homepage';\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        if (err.response.status === 403) {\n          setWrongCredentials(true);\n          console.log('wrong password');\n        } else if (err.response.status === 409) {\n          setWrongCredentials(true);\n          console.log('wrong email');\n        } else {\n          console.log(err);\n        }\n      });\n  }\n\n  return (\n    <div>\n      <div className=\"d-flex justify-content-center\">\n        <div\n          style={{\n            padding: '20px',\n            marginTop: '350px',\n            borderRadius: '10px',\n            width: '350px',\n            backgroundColor: 'transparent',\n            textAlign: 'center',\n          }}\n        >\n          <form onSubmit={handleSubmit}>\n            <div>\n              {wrongCredentials && (\n                <div\n                  style={{\n                    textAlign: 'center',\n                    backgroundColor: '#f8a6a6',\n                    marginTop: '50px',\n                    border: 'solid 1px #124686',\n                    color: '#660101',\n                    borderRadius: '5px',\n                  }}\n                >\n                  <p style={{ margin: 'auto' }}>Incorrect email or password</p>\n                </div>\n              )}\n            </div>\n            <h1\n              style={{\n                marginTop: '15px',\n                fontSize: '30px',\n              }}\n            >\n              User Login\n            </h1>\n            {/*USER EMAIL*/}\n            <div>\n              <input\n                type=\"text\"\n                name=\"email\"\n                value={user.email}\n                required\n                style={{ marginTop: '15px', width: '226px' }}\n                placeholder=\"Email\"\n                onChange={(e) => {\n                  const s = { ...user };\n                  s.email = e.target.value;\n                  setUser(s);\n                }}\n              />\n            </div>\n            {/*USER PASSWORD*/}\n            <div>\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={user.password}\n                required\n                style={{ marginTop: '15px', width: '226px' }}\n                placeholder=\"Password\"\n                onChange={(e) => {\n                  const s = { ...user };\n                  s.password = e.target.value;\n                  setUser(s);\n                }}\n              />\n            </div>\n            <div className=\"register-redirect-container\">\n              <p>\n                You don't have an account?\n                <Link to=\"/register\">Register </Link>with us.\n              </p>\n            </div>\n            <div className=\"login-button-container\">\n              <button\n                style={{ marginTop: '15px', marginRight: '5px' }}\n                type=\"submit\"\n                className=\"btn btn-outline-primary\"\n              >\n                Submit\n              </button>\n              <Link to=\"/homepage\">\n                <button\n                  style={{\n                    marginTop: '15px',\n                    float: 'right',\n                    maringLeft: '5px',\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-outline-primary\"\n                >\n                  Back\n                </button>\n              </Link>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/inbox/Inbox.js",[],"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/review/AddReview.js",["99"],"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/GameCard.js",[],"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/Logout.js",[],"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/ActiveOffers.js",["100"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport RecievedDeals from './RecievedDeals';\n\nfunction ActiveOffers({ offers }) {\n  return (\n    <div>\n      <h3>Active offers</h3>\n      <table>\n        <tr>\n          <th>Game Title</th>\n          <th>Condition</th>\n          <th>Platform</th>\n\n          <th>Recieved Deals</th>\n        </tr>\n        {offers.map((offer, index) => (\n          <tr key={index}>\n            <td key={offer.title}>{offer.game.title}</td>\n            <td>{offer.description}</td>\n            <td>{offer.game.platform}</td>\n            <Link\n              to={{\n                pathname: '/recieved-deals',\n                gameId: offer.game.id,\n                gameTitle: offer.game.title,\n              }}\n            >\n              <button className=\"btn btn-special\">Check</button>\n            </Link>\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n}\n\nexport default ActiveOffers;\n","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/EditableFields.js",[],"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/inbox/MessageSection.js",[],"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/SearchGameToOffer.js",["101"],"import React, { useContext, useEffect, useState } from 'react';\nimport { UserContext } from './UserContext';\nimport axios from 'axios';\n\nfunction SearchGameToOffer({ offerId }) {\n  const value = useContext(UserContext);\n  const userId = value.userId;\n  const offlineName = value.firstName;\n  const [searchedGameList, setSearchedGameList] = useState([]);\n\n  const [deal, setDeal] = useState({\n    activeUserID: '',\n    gameSentTitle: '',\n    gameSentPlatform: '',\n    gameSentImage: '',\n    offlineUserID: userId,\n    offlineUserName: offlineName,\n    gameListedId: '',\n    date: Date.now(),\n  });\n\n  //the game that user will like to offer (to send)\n  const [selectedGame, setSelectedGame] = useState({});\n  const [consoleList, setConsoleList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.rawg.io/api/platforms?key=d124f7e507b7487ba9faa3cc51bfaabf`\n      )\n      .then((response) => {\n        setConsoleList(response.data.results);\n      });\n\n    //OFFLINE USER AND OFFLINE GAME\n    axios\n      .get(`/api/offer-by-id/${offerId}`, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      })\n      .then((response) => {\n        const s = { ...deal };\n        s.activeUserID = response.data.user.id;\n        // s.offlineUserName = response.data.user.firstName;\n        s.gameListedId = response.data.game.id;\n        setDeal(s);\n        setIsLoading(false);\n      });\n  }, [isLoading]);\n\n  const handleChange = (e) => {\n    axios\n      .get(\n        `https://api.rawg.io/api/games?key=d124f7e507b7487ba9faa3cc51bfaabf&search=${e.target.value}`,\n        {\n          params: {\n            page_size: 5,\n            search_exact: false,\n            search_precise: true,\n          },\n        }\n      )\n      .then((response) => {\n        setSearchedGameList(response.data.results);\n      });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    axios\n      .post(`/api/add-deal`, deal, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      })\n      .then(() => {\n        console.log('Success');\n      });\n  };\n\n  return (\n    <>\n      <div className=\"trade-page-container\">\n        <div className=\"d-flex justify-content-center offer-card\">\n          <div\n            className=\"card h-100\"\n            style={{ width: '18rem', marginTop: '20px' }}\n          >\n            <h4 style={{ marginTop: '15px' }}>\n              <i>Your offer: </i>\n            </h4>\n            <form className=\"form-inline my-2 my-lg-0\">\n              <input\n                className=\"form-control mr-sm-2\"\n                id=\"searchBar\"\n                type=\"search\"\n                placeholder=\"Enter game name...\"\n                aria-label=\"Search\"\n                onChange={handleChange}\n              />\n            </form>\n            <div className=\"d-flex justify-content-center\">\n              <ul id=\"gameCard\" className=\"search-container\">\n                {searchedGameList.map((game, index) => {\n                  return (\n                    <p key={index}>\n                      <div\n                        style={{ cursor: 'pointer' }}\n                        onClick={(e) => {\n                          axios\n                            .get(`https://api.rawg.io/api/games/${game.id}`)\n                            .then((response) => {\n                              setSelectedGame(response.data);\n                              const d = { ...deal };\n                              d.gameSentTitle = response.data.name;\n                              d.gameSentImage = response.data.background_image;\n                              setDeal(d);\n                              document.getElementById('gameCard').hidden = true;\n                              document.getElementById(\n                                'searchBar'\n                              ).hidden = true;\n                            });\n                        }}\n                      >\n                        {game.name}\n                      </div>\n                    </p>\n                  );\n                })}\n              </ul>\n            </div>\n            {selectedGame.background_image ? (\n              <img\n                className=\"card-img-top\"\n                src={selectedGame.background_image}\n                alt=\"background-game\"\n              />\n            ) : null}\n\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{selectedGame.name}</h5>\n              <p className=\"card-text\">\n                Release year : {selectedGame.released}\n              </p>\n              <div className=\"input-group mb-3\" style={{ marginTop: '15px' }}>\n                <select\n                  className=\"custom-select\"\n                  id=\"inputGroupSelect01\"\n                  required\n                  onChange={(e) => {\n                    const s = deal;\n                    s.gameSentPlatform = e.target.value;\n                    setDeal(s);\n                  }}\n                >\n                  <option defaultValue=\"\">Select platform...</option>\n                  {consoleList.map((console, index) => {\n                    return (\n                      <option key={index} value={console.name}>\n                        {console.name}\n                      </option>\n                    );\n                  })}\n                </select>\n              </div>\n\n              <button\n                className=\"btn btn-outline-primary\"\n                onClick={handleSubmit}\n              >\n                Submit Offer\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default SearchGameToOffer;\n",{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":26},{"ruleId":"110","severity":1,"message":"111","line":48,"column":6,"nodeType":"112","endLine":48,"endColumn":10,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"114","line":70,"column":6,"nodeType":"112","endLine":70,"endColumn":8,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":200,"column":25,"nodeType":"118","endLine":203,"endColumn":26},{"ruleId":"116","severity":1,"message":"119","line":212,"column":25,"nodeType":"118","endLine":212,"endColumn":54},{"ruleId":"116","severity":1,"message":"119","line":218,"column":25,"nodeType":"118","endLine":218,"endColumn":51},{"ruleId":"106","severity":1,"message":"120","line":8,"column":9,"nodeType":"108","messageId":"109","endLine":8,"endColumn":15},{"ruleId":"106","severity":1,"message":"107","line":1,"column":27,"nodeType":"108","messageId":"109","endLine":1,"endColumn":36},{"ruleId":"106","severity":1,"message":"121","line":11,"column":10,"nodeType":"108","messageId":"109","endLine":11,"endColumn":18},{"ruleId":"106","severity":1,"message":"120","line":8,"column":9,"nodeType":"108","messageId":"109","endLine":8,"endColumn":15},{"ruleId":"106","severity":1,"message":"122","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":21},{"ruleId":"110","severity":1,"message":"123","line":51,"column":6,"nodeType":"112","endLine":51,"endColumn":17,"suggestions":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUserData'. Either include it or remove the dependency array.","ArrayExpression",["127"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["128"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'userId' is assigned a value but never used.","'loggedIn' is assigned a value but never used.","'RecievedDeals' is defined but never used.","React Hook useEffect has missing dependencies: 'deal' and 'offerId'. Either include them or remove the dependency array.",["129"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [fetchUserData, id]",{"range":"136","text":"137"},"Update the dependencies array to be: [id]",{"range":"138","text":"139"},"Update the dependencies array to be: [deal, isLoading, offerId]",{"range":"140","text":"141"},[1470,1474],"[fetchUserData, id]",[1996,1998],"[id]",[1507,1518],"[deal, isLoading, offerId]"]