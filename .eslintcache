[{"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/index.js":"1","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/App.js":"2","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/HomePage.js":"3","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/Login.js":"4","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/AddGame.js":"5","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/Register.js":"6","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/SearchGame.js":"7","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/Navbar.js":"8","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/UserProfile.js":"9","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/ActiveOffers.js":"10","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/EditableFields.js":"11","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/Logout.js":"12","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/UserContext.js":"13","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/SearchGameToOffer.js":"14","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/util/consoles.js":"15","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/GameCard.js":"16","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/review/UserRating.js":"17","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/review/AddReview.js":"18"},{"size":197,"mtime":1610606957411,"results":"19","hashOfConfig":"20"},{"size":1366,"mtime":1612949812816,"results":"21","hashOfConfig":"20"},{"size":735,"mtime":1612873680519,"results":"22","hashOfConfig":"20"},{"size":4242,"mtime":1612873680519,"results":"23","hashOfConfig":"20"},{"size":6075,"mtime":1612873680519,"results":"24","hashOfConfig":"20"},{"size":9169,"mtime":1612873680519,"results":"25","hashOfConfig":"20"},{"size":3971,"mtime":1612952916764,"results":"26","hashOfConfig":"20"},{"size":1293,"mtime":1612873680519,"results":"27","hashOfConfig":"20"},{"size":10574,"mtime":1612953290423,"results":"28","hashOfConfig":"20"},{"size":546,"mtime":1610694037512,"results":"29","hashOfConfig":"20"},{"size":485,"mtime":1610955096390,"results":"30","hashOfConfig":"20"},{"size":77,"mtime":1611655745304,"results":"31","hashOfConfig":"20"},{"size":839,"mtime":1611655146179,"results":"32","hashOfConfig":"20"},{"size":5719,"mtime":1612873748096,"results":"33","hashOfConfig":"20"},{"size":732,"mtime":1612871889369,"results":"34","hashOfConfig":"20"},{"size":2033,"mtime":1612953290407,"results":"35","hashOfConfig":"20"},{"size":5848,"mtime":1612953160428,"results":"36","hashOfConfig":"20"},{"size":3385,"mtime":1612952820897,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1n3q3m",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/index.js",[],["79","80"],"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/App.js",[],"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/HomePage.js",[],"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/Login.js",["81","82"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction Login() {\n  const [wrongEmail, setWrongEmail] = useState(false);\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n  });\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    axios\n      .post(`/api/login`, user, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      })\n      .then((response) => {\n        if (response.status === 200) {\n          setLoggedIn(true);\n          localStorage.setItem('token', response.data.token);\n          window.location.href = 'http://localhost:3000/homepage';\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        if (err.response.status === 401) {\n          console.log('wrong password');\n        } else if (err.response.status === 409) {\n          setWrongEmail(true);\n          console.log('wrong email');\n        } else {\n          console.log(err);\n        }\n      });\n  }\n\n  return (\n    <div>\n      <div className=\"d-flex justify-content-center\">\n        <div\n          style={{\n            padding: '20px',\n            marginTop: '350px',\n            borderRadius: '10px',\n            width: '350px',\n            backgroundColor: 'transparent',\n            textAlign: 'center',\n          }}\n        >\n          <form onSubmit={handleSubmit}>\n            <div>\n              {wrongEmail && (\n                <div\n                  style={{\n                    textAlign: 'center',\n                    backgroundColor: '#f8a6a6',\n                    marginTop: '50px',\n                    border: 'solid 1px #124686',\n                    color: '#660101',\n                  }}\n                >\n                  <i>Incorrect email or password.</i>\n                </div>\n              )}\n            </div>\n            <h1\n              style={{\n                marginTop: '15px',\n                fontFamily: \"'Source Serif Pro', serif\",\n                fontSize: '30px',\n              }}\n            >\n              User Login\n            </h1>\n            {/*USER EMAIL*/}\n            <div>\n              <input\n                type=\"text\"\n                name=\"email\"\n                value={user.email}\n                required\n                style={{ marginTop: '15px', width: '226px' }}\n                placeholder=\"Email\"\n                onChange={(e) => {\n                  const s = { ...user };\n                  s.email = e.target.value;\n                  setUser(s);\n                }}\n              />\n            </div>\n            {/*USER PASSWORD*/}\n            <div>\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={user.password}\n                required\n                style={{ marginTop: '15px', width: '226px' }}\n                placeholder=\"Password\"\n                onChange={(e) => {\n                  const s = { ...user };\n                  s.password = e.target.value;\n                  setUser(s);\n                }}\n              />\n            </div>\n            <div className=\"login-button-container\">\n              <button\n                style={{ marginTop: '15px', marginRight: '5px' }}\n                type=\"submit\"\n                className=\"btn btn-outline-primary\"\n              >\n                Submit\n              </button>\n              <Link to=\"/\">\n                <button\n                  style={{\n                    marginTop: '15px',\n                    float: 'right',\n                    maringLeft: '5px',\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-outline-primary\"\n                >\n                  Back\n                </button>\n              </Link>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/AddGame.js",["83"],"import React, {useState, useEffect, useContext} from 'react';\nimport axios from 'axios';\nimport {UserContext} from \"./UserContext\";\n\nfunction AddGame(props) {\n\n  const value = useContext(UserContext);\n  const userId = value.userId;\n\n  const [searchedGameList, setSearchedGameList] = useState([]);\n  const [offerToAdd, setOfferToAdd] = useState({\n    game: {\n      title: '',\n      platform: '',\n      picture: '',\n      category: '',\n      rating: '',\n    },\n    description: '',\n  });\n  const [selectedGame, setSelectedGame] = useState({});\n  const [consoleList, setConsoleList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.rawg.io/api/platforms?key=d124f7e507b7487ba9faa3cc51bfaabf`\n      )\n      .then((response) => {\n        setConsoleList(response.data.results);\n        setIsLoading(false);\n      });\n  }, [isLoading]);\n\n  const handleChange = (e) => {\n    axios\n      .get(\n        `https://api.rawg.io/api/games?key=d124f7e507b7487ba9faa3cc51bfaabf&search=${e.target.value}`\n      )\n      .then((response) => {\n        setSearchedGameList(response.data.results);\n      });\n  };\n\n  const addGame = (e) => {\n    e.preventDefault();\n    const s = { ...offerToAdd };\n    s.game.title = selectedGame.name;\n    s.game.picture = selectedGame.background_image;\n    s.game.category = selectedGame.genres[0].name;\n    s.game.rating = selectedGame.rating;\n    setOfferToAdd(s);\n    axios\n      .post(`/api/add-offer/${userId}`, offerToAdd)\n      .then(() => alert('Game added successfully !'));\n  };\n\n  return (\n    <>\n      <div className=\"d-flex justify-content-center\">\n        <h1\n          style={{\n            marginTop: '15px',\n            fontFamily: \"'Source Serif Pro', serif\",\n            fontSize: '30px',\n          }}\n        >\n          Add a game\n        </h1>\n      </div>\n\n      <div className=\"d-flex justify-content-center\">\n        <form className=\"form-inline my-2 my-lg-0\">\n          <input\n            className=\"form-control mr-sm-2\"\n            type=\"search\"\n            placeholder=\"Enter game name...\"\n            aria-label=\"Search\"\n            onChange={handleChange}\n          />\n        </form>\n      </div>\n\n      <div className=\"d-flex justify-content-center\">\n        <ul id=\"gameCard\">\n          {searchedGameList.map((game, index) => {\n            return (\n              <p key={index}>\n                <div\n                  style={{ cursor: 'pointer' }}\n                  onClick={(e) => {\n                    axios\n                      .get(`https://api.rawg.io/api/games/${game.id}`)\n                      .then((response) => {\n                        setSelectedGame(response.data);\n                        document.getElementById('gameCard').hidden = true;\n                      });\n                  }}\n                >\n                  {game.name}\n                </div>\n              </p>\n            );\n          })}\n        </ul>\n      </div>\n\n      {Object.keys(selectedGame).length !== 0 && (\n        <div className=\"d-flex justify-content-center\">\n          <div className=\"card\" style={{ width: '18rem', marginTop: '20px' }}>\n            <img\n              className=\"card-img-top\"\n              src={selectedGame.background_image}\n              alt=\"background-game\"\n            />\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{selectedGame.name}</h5>\n              <p className=\"card-text\">\n                Release year : {selectedGame.released}\n              </p>\n              <div className=\"input-group mb-3\" style={{ marginTop: '15px' }}>\n                <select\n                  className=\"custom-select\"\n                  id=\"inputGroupSelect01\"\n                  required\n                  onChange={(e) => {\n                    const s = { ...offerToAdd };\n                    s.game.platform = e.target.value;\n                    setOfferToAdd(s);\n                  }}\n                >\n                  <option defaultValue=\"\">Select platform...</option>\n                  {consoleList.map((console, index) => {\n                    return (\n                      <option key={index} value={console.name}>\n                        {console.name}\n                      </option>\n                    );\n                  })}\n                </select>\n                <input\n                  style={{ marginTop: '15px', width: '246px' }}\n                  type=\"text\"\n                  placeholder=\"Description (Ex. : game is used)\"\n                  onChange={(e) => {\n                    const s = { ...offerToAdd };\n                    s.description = e.target.value;\n                    setOfferToAdd(s);\n                  }}\n                />\n              </div>\n              <button\n                href={'#'}\n                className=\"btn btn-outline-primary\"\n                onClick={addGame}\n              >\n                Add Game\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default AddGame;\n","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/Register.js",[],"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/SearchGame.js",["84"],"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/Navbar.js",[],"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/UserProfile.js",["85","86","87","88","89"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport React, { useContext } from 'react';\nimport { useState, useEffect } from 'react';\nimport '../UserProfile.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faPhone,\n  faMapMarkerAlt,\n  faEnvelope,\n  faDesktop,\n  faGamepad,\n} from '@fortawesome/free-solid-svg-icons';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport ActiveOffers from './ActiveOffers';\nimport Modal from 'react-modal';\nimport EditableFields from './EditableFields';\nimport { UserContext } from './UserContext';\n\nfunction UserProfile() {\n  const value = useContext(UserContext);\n\n  library.add(faPhone, faMapMarkerAlt, faEnvelope, faDesktop, fab, faGamepad);\n  const [user, setUser] = useState({\n    activeOffers: [],\n    console: '',\n  });\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [inputIsEditable, setInputIsEditable] = useState(false);\n  const [consoleList, setConsoleList] = useState([]);\n  const [activeOffers, setActiveOffers] = useState([]);\n  const [updatedUserInformation, setUpdatedUserInformation] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    town: '',\n    country: '',\n    console: '',\n  });\n  const [userAvatar, setUserAvatar] = useState();\n\n  //   // ID will be found in session when session will be implemented\n  let id = value.userId;\n\n  useEffect(() => {\n    fetchUserData(id);\n  }, [id]);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.rawg.io/api/platforms?key=d124f7e507b7487ba9faa3cc51bfaabf`\n      )\n      .then((response) => {\n        setConsoleList(response.data.results);\n      });\n  }, [inputIsEditable]);\n\n  useEffect(() => {\n    axios\n      .get(`/api/get-active-offers-by-user-id/${id}`, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      })\n      .then((response) => {\n        setActiveOffers(response.data);\n      });\n  }, []);\n\n  function fetchUserData(id) {\n    axios\n      .get(`/api/get-user-by-id/${id}`, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      })\n      .then((response) => {\n        setUser(response.data);\n        generateUserAvatar(response.data.firstName, response.data.lastName);\n      });\n  }\n\n  function generateUserAvatar(firstName, lastName) {\n    console.log(firstName, lastName);\n    axios\n      .get(`https://eu.ui-avatars.com/api/?name=${firstName}+${lastName}`)\n      .then((response) => {\n        setUserAvatar(response.config.url);\n        console.log(response);\n      });\n  }\n\n  const setModalIsOpenToTrue = () => {\n    setModalIsOpen(true);\n  };\n\n  const setModalIsOpenToFalse = () => {\n    setModalIsOpen(false);\n  };\n\n  const modalCustomStyle = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n    },\n  };\n\n  const setEditProfileToTrue = () => {\n    setUpdatedUserInformation(user);\n    setInputIsEditable(true);\n  };\n\n  const setEditProfileToFalse = () => {\n    setInputIsEditable(false);\n    axios\n      .put(`api/update-user/${id}`, updatedUserInformation, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      })\n      .then((response) => {\n        if (response.status === 201) {\n          console.log('User updated succesfully');\n          setUser({ ...updatedUserInformation });\n          generateUserAvatar(\n            updatedUserInformation.firstName,\n            updatedUserInformation.lastName\n          );\n        }\n      });\n  };\n\n  const updateUserProfile = (value, key) => {\n    setUpdatedUserInformation({\n      ...updatedUserInformation,\n      [key]: value,\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"container main-container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"panel panel-default plain profile-panel\">\n              <div className=\"panel-body\">\n                <div className=\"container\">\n                  <div className=\"profile-avatar\">\n                    <img\n                      className=\"img-responsive\"\n                      src={userAvatar}\n                      alt=\"profile\"\n                    ></img>\n                  </div>\n                  <div className=\"container user-profile-container\">\n                    <div className=\"user-name\">\n                      <div className=\"user-name-container\">\n                        <EditableFields\n                          inputName=\"firstName\"\n                          userInfo={user.firstName}\n                          editable={inputIsEditable}\n                          updateField={updateUserProfile}\n                        ></EditableFields>\n                        <EditableFields\n                          inputName=\"lastName\"\n                          userInfo={user.lastName}\n                          editable={inputIsEditable}\n                          updateField={updateUserProfile}\n                        ></EditableFields>\n                        <div>\n                          {inputIsEditable === false ? (\n                            <button\n                              onClick={setEditProfileToTrue}\n                              className=\"btn btn-info\"\n                            >\n                              Edit Profile\n                            </button>\n                          ) : (\n                            <button\n                              onClick={setEditProfileToFalse}\n                              className=\"btn btn-special\"\n                            >\n                              Save Profile\n                            </button>\n                          )}\n                        </div>\n                      </div>\n                      <a href={`/user-rating/${value.userId}`}>See my reviews</a>\n                    </div>\n\n                    <div className=\"user-information\">Short Description</div>\n                    <div className=\"profile-stats-info\">\n                      <div>\n                        <a\n                          onClick={setModalIsOpenToTrue}\n                          style={{ cursor: 'pointer' }}\n                        >\n                          Active Offers: <strong>{activeOffers.length}</strong>\n                        </a>\n                        <Modal isOpen={modalIsOpen} style={modalCustomStyle}>\n                          <button onClick={setModalIsOpenToFalse}>x</button>\n                          <ActiveOffers offers={activeOffers}></ActiveOffers>\n                        </Modal>\n                      </div>\n                      <div>\n                        <a href=\"#\" title=\"Comments\">\n                          Rating:\n                          <strong>10</strong>\n                        </a>\n                      </div>\n                      <div>\n                        <a href=\"#\" title=\"Likes\">\n                          Completed Deals:\n                          <strong>4</strong>\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"panel-footer white-content\">\n                <div className=\"user-contact\">\n                  <ul className=\"profile-info\">\n                    <div className=\"li-container\">\n                      <li>\n                        <FontAwesomeIcon icon=\"phone\"></FontAwesomeIcon>\n                        <EditableFields\n                          inputName=\"phone\"\n                          userInfo={user.phone}\n                          editable={inputIsEditable}\n                          updateField={updateUserProfile}\n                        ></EditableFields>\n                      </li>\n                    </div>\n                    <div className=\"li-container\">\n                      <li>\n                        <FontAwesomeIcon icon=\"map-marker-alt\"></FontAwesomeIcon>\n                        <EditableFields\n                          inputName=\"town\"\n                          userInfo={user.town}\n                          editable={inputIsEditable}\n                          updateField={updateUserProfile}\n                        ></EditableFields>\n                        ,\n                        <EditableFields\n                          inputName=\"country\"\n                          userInfo={user.country}\n                          editable={inputIsEditable}\n                          updateField={updateUserProfile}\n                        ></EditableFields>\n                      </li>\n                    </div>\n                    <div className=\"li-container\">\n                      <li>\n                        <FontAwesomeIcon icon=\"envelope\"></FontAwesomeIcon>\n                        <EditableFields\n                          inputName=\"email\"\n                          userInfo={user.email}\n                          editable={inputIsEditable}\n                          updateField={updateUserProfile}\n                        ></EditableFields>\n                      </li>\n                    </div>\n                    <div className=\"li-container\">\n                      <li>\n                        <FontAwesomeIcon icon=\"gamepad\"></FontAwesomeIcon>\n                        {inputIsEditable ? (\n                          <select\n                            className=\"dropdown-select\"\n                            required\n                            onChange={(e) => {\n                              updateUserProfile(e.target.value, 'console');\n                            }}\n                          >\n                            <option>{user.console}</option>\n                            {consoleList.map((console, index) => {\n                              return (\n                                <option key={index} value={console.name}>\n                                  {console.name}\n                                </option>\n                              );\n                            })}\n                          </select>\n                        ) : (\n                          <div style={{ marginLeft: '10px' }}>\n                            {user.console}\n                          </div>\n                        )}\n                      </li>\n                    </div>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserProfile;\n","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/ActiveOffers.js",[],"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/EditableFields.js",[],"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/Logout.js",[],"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/UserContext.js",[],"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/SearchGameToOffer.js",["90"],"import React, {useContext, useEffect, useState} from 'react';\nimport {UserContext} from \"./UserContext\";\nimport axios from \"axios\";\n\nfunction SearchGameToOffer({offerId}) {\n\n    const value = useContext(UserContext);\n    const userId = value.userId;\n    const [searchedGameList, setSearchedGameList] = useState([]);\n    const [activeUser, setActiveUser] = useState({});\n\n    const [deal, setDeal] = useState({\n        userWhoSent : {\n\n        },\n        gameSent : {\n\n        },\n        userWhoReceived : {\n\n        },\n        gameWhoReceived : {\n\n        },\n        date : Date.now(),\n    })\n\n    //the game that user will like to offer (to send)\n    const [selectedGame, setSelectedGame] = useState({});\n\n    //the game that user wishes to purchase\n    const [desiredGame, setDesiredGame] = useState({});\n    const [nonActiveUser, setNonActiveUser] = useState({});\n    const [consoleList, setConsoleList] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [gameToAddToDeal, setGameToAddToDeal] = useState({});\n    const [offerToAdd, setOfferToAdd] = useState({\n        game: {\n            title: '',\n            platform: '',\n            picture: '',\n            category: '',\n            rating: '',\n        },\n        description: '',\n    });\n\n    useEffect(() => {\n        axios.get(`https://api.rawg.io/api/platforms?key=d124f7e507b7487ba9faa3cc51bfaabf`)\n            .then((response) => {\n                setConsoleList(response.data.results);\n            });\n        axios.get(`/api/get-user-by-id/${userId}`)\n            .then(response => {\n                setActiveUser(response.data);\n            });\n        axios.get(`/api/offer-by-id/${offerId}`)\n            .then(response => {\n                setDesiredGame(response.data.game);\n                setNonActiveUser(response.data.user);\n                setIsLoading(false);\n            })\n    }, [isLoading]);\n\n    const handleChange = (e) => {\n        axios\n            .get(\n                `https://api.rawg.io/api/games?key=d124f7e507b7487ba9faa3cc51bfaabf&search=${e.target.value}`\n            )\n            .then((response) => {\n                setSearchedGameList(response.data.results);\n            });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const s = { ...offerToAdd };\n        s.game.title = selectedGame.name;\n        s.game.picture = selectedGame.background_image;\n        s.game.category = selectedGame.genres[0].name;\n        s.game.rating = selectedGame.rating;\n        setOfferToAdd(s);\n\n        axios\n            .post(`/api/add-offer/${userId}`, offerToAdd)\n            .then((response) => {\n                if(response.status === 201){\n                    axios.get(`/api/get-offer/${response.data.title}`)\n                        .then(() => {\n                            setGameToAddToDeal(response.data.game);\n                            const c = {...deal}\n                            c.gameSent = gameToAddToDeal;\n                            setDeal(c);\n                        })\n                        .then(() => {\n                            console.log(deal)\n                            axios.post(`/api/add-deal`, deal)\n                                .then((response) => {\n\n                                    console.log(response.status)\n                                })\n                        })\n                    }\n                }\n\n            );\n\n    };\n\n\n\n    return (\n        <>\n            <div className=\"d-flex justify-content-center\">\n                <h4 style={{marginTop: '15px'}}>\n                    <i>Game you offer : </i>\n                </h4>\n            </div>\n\n{/*GAME THAT YOU SEARCH (DESIRE TO GET)*/}\n            <div className=\"d-flex justify-content-center\">\n                <form className=\"form-inline my-2 my-lg-0\">\n                    <input className=\"form-control mr-sm-2\" id=\"searchBar\" type=\"search\" placeholder=\"Enter game name...\" aria-label=\"Search\" onChange={handleChange}/>\n                </form>\n            </div>\n\n            <div className=\"d-flex justify-content-center\">\n                <ul id=\"gameCard\">\n                    {searchedGameList.map((game, index) => {\n                        return (<p key={index}>\n                                <div style={{ cursor: 'pointer' }} onClick={(e) => {\n                                        axios\n                                            .get(`https://api.rawg.io/api/games/${game.id}`)\n                                            .then((response) => {\n                                                setSelectedGame(response.data);\n                                                document.getElementById('gameCard').hidden = true;\n                                                document.getElementById(\"searchBar\").hidden = true;\n                                            });\n                                    }}>\n                                    {game.name}\n                                </div>\n                            </p>\n                        );\n                    })}\n                </ul>\n            </div>\n\n{/*GAME THAT YOU OFFER*/}\n            {Object.keys(selectedGame).length !== 0 && (\n                <div className=\"d-flex justify-content-center\">\n                    <div>\n                        <img className=\"card-img-top\" src={selectedGame.background_image} alt=\"background-game\"/>\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{selectedGame.name}</h5>\n                            <p className=\"card-text\">Release year : {selectedGame.released}</p>\n                            <div className=\"input-group mb-3\" style={{ marginTop: '15px' }}>\n                                <select className=\"custom-select\" id=\"inputGroupSelect01\" required onChange={(e) => {\n                                    const s = {...deal};\n                                    s.userWhoSent = activeUser;\n                                    s.userWhoReceived = nonActiveUser;\n                                    s.gameWhoReceived = desiredGame;\n                                    setDeal(s);\n                                    }}>\n                                    <option defaultValue=\"\">Select platform...</option>\n                                    {consoleList.map((console, index) => {\n                                        return (\n                                            <option key={index} value={console.name}>\n                                                {console.name}\n                                            </option>\n                                        );\n                                    })}\n                                </select>\n                            </div>\n\n                            <button className=\"btn btn-outline-primary\" onClick={handleSubmit}>Submit Offer</button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n}\n\nexport default SearchGameToOffer;","/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/util/consoles.js",[],"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/GameCard.js",[],"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/review/UserRating.js",["91"],"/home/alex/Desktop/projects/advanced/switch-play-frontend/src/components/review/AddReview.js",["92","93","94"],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":1,"column":27,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},{"ruleId":"99","severity":1,"message":"103","line":11,"column":10,"nodeType":"101","messageId":"102","endLine":11,"endColumn":18},{"ruleId":"99","severity":1,"message":"100","line":1,"column":26,"nodeType":"101","messageId":"102","endLine":1,"endColumn":35},{"ruleId":"99","severity":1,"message":"100","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":48,"column":6,"nodeType":"106","endLine":48,"endColumn":10,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"108","line":70,"column":6,"nodeType":"106","endLine":70,"endColumn":8,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":210,"column":25,"nodeType":"112","endLine":213,"endColumn":26},{"ruleId":"110","severity":1,"message":"113","line":222,"column":25,"nodeType":"112","endLine":222,"endColumn":54},{"ruleId":"110","severity":1,"message":"113","line":228,"column":25,"nodeType":"112","endLine":228,"endColumn":51},{"ruleId":"104","severity":1,"message":"114","line":44,"column":8,"nodeType":"106","endLine":44,"endColumn":19,"suggestions":"115"},{"ruleId":"99","severity":1,"message":"116","line":9,"column":11,"nodeType":"101","messageId":"102","endLine":9,"endColumn":17},{"ruleId":"99","severity":1,"message":"100","line":1,"column":28,"nodeType":"101","messageId":"102","endLine":1,"endColumn":37},{"ruleId":"99","severity":1,"message":"116","line":11,"column":11,"nodeType":"101","messageId":"102","endLine":11,"endColumn":17},{"ruleId":"117","severity":1,"message":"118","line":26,"column":9,"nodeType":"119","messageId":"120","endLine":52,"endColumn":10},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'loggedIn' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUserData'. Either include it or remove the dependency array.","ArrayExpression",["123"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["124"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'deal', 'offerId', and 'userId'. Either include them or remove the dependency array.",["125"],"'userId' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [fetchUserData, id]",{"range":"132","text":"133"},"Update the dependencies array to be: [id]",{"range":"134","text":"135"},"Update the dependencies array to be: [deal, isLoading, offerId, userId]",{"range":"136","text":"137"},[1470,1474],"[fetchUserData, id]",[1996,1998],"[id]",[1193,1204],"[deal, isLoading, offerId, userId]"]