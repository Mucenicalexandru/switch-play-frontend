[{"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/index.js":"1","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/App.js":"2","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/Register.js":"3","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/Login.js":"4","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/UserProfile.js":"5","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/Navbar.js":"6","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/HomePage.js":"7","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/SearchGame.js":"8","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/AddGame.js":"9","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/ActiveOffers.js":"10","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/EditableFields.js":"11"},{"size":197,"mtime":1610623156295,"results":"12","hashOfConfig":"13"},{"size":961,"mtime":1610638480823,"results":"14","hashOfConfig":"13"},{"size":8294,"mtime":1610623156290,"results":"15","hashOfConfig":"13"},{"size":2427,"mtime":1610623156287,"results":"16","hashOfConfig":"13"},{"size":8563,"mtime":1610954426765,"results":"17","hashOfConfig":"13"},{"size":617,"mtime":1610638608603,"results":"18","hashOfConfig":"13"},{"size":429,"mtime":1610638480824,"results":"19","hashOfConfig":"13"},{"size":3573,"mtime":1610696782380,"results":"20","hashOfConfig":"13"},{"size":5040,"mtime":1610954437662,"results":"21","hashOfConfig":"13"},{"size":546,"mtime":1610638668242,"results":"22","hashOfConfig":"13"},{"size":485,"mtime":1610917447031,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"e35gfz",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/index.js",[],["49","50"],"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/App.js",[],"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/Register.js",[],"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/Login.js",["51","52"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction Login() {\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n  });\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    axios\n      .post(`/api/check-if-user`, user)\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200) {\n          setLoggedIn(true);\n          window.location.href = 'http://localhost:3000/homepage';\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        if (err.response.status === 401) {\n          console.log('wrong password');\n        } else if (err.response.status === 409) {\n          console.log('wrong email');\n        } else {\n          console.log(err);\n        }\n      });\n  }\n\n  return (\n    <div>\n      <div className=\"d-flex justify-content-center\">\n        <form onSubmit={handleSubmit}>\n          {/*USER EMAIL*/}\n          <div>\n            <input\n              type=\"text\"\n              name=\"email\"\n              value={user.email}\n              required\n              style={{ marginTop: '15px', width: '226px' }}\n              placeholder=\"Email\"\n              onChange={(e) => {\n                const s = { ...user };\n                s.email = e.target.value;\n                setUser(s);\n              }}\n            />\n          </div>\n          {/*USER PASSWORD*/}\n          <div>\n            <input\n              type=\"text\"\n              name=\"password\"\n              value={user.password}\n              required\n              style={{ marginTop: '15px', width: '226px' }}\n              placeholder=\"Password\"\n              onChange={(e) => {\n                const s = { ...user };\n                s.password = e.target.value;\n                setUser(s);\n              }}\n            />\n          </div>\n          <Link to=\"/\">\n            <button\n              style={{ marginTop: '15px', float: 'right' }}\n              type=\"submit\"\n              className=\"btn btn-outline-primary\"\n            >\n              Back\n            </button>\n          </Link>\n          <button\n            style={{ marginTop: '15px' }}\n            type=\"submit\"\n            className=\"btn btn-outline-primary\"\n          >\n            Submit\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/UserProfile.js",["53","54","55"],"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/Navbar.js",[],"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/HomePage.js",[],"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/SearchGame.js",["56","57"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport default function SearchGame() {\n  const [display, setDisplay] = useState(true);\n  const [containerDisplay, setContainerDisplay] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [gamesList, setGames] = useState([]);\n\n  console.log(gamesList);\n\n  function handleSearchInput(e) {\n    const search_result = e.target.value;\n    axios\n      .get(\n        `https://api.rawg.io/api/games?key=a0200251f0824f9291c541b963f86c46&page_size=10&search=${search_result}`\n      )\n      .then((res) => {\n        const data = res.data.results;\n        setOptions(data);\n        setDisplay(true);\n        setContainerDisplay(false);\n      });\n  }\n  return (\n    <div>\n      <div className=\"d-flex justify-content-center\">\n        <h1\n          style={{\n            marginTop: '15px',\n            fontFamily: \"'Source Serif Pro', serif\",\n            fontSize: '30px',\n          }}\n        >\n          Search for a game\n        </h1>\n      </div>\n      <div className=\"d-flex justify-content-center\">\n        <form className=\"form-inline my-2 my-lg-0\">\n          <input\n            className=\"form-control mr-sm-2\"\n            type=\"search\"\n            placeholder=\"Enter game name...\"\n            aria-label=\"Search\"\n            onChange={handleSearchInput}\n          />\n        </form>\n      </div>\n      {display && (\n        <div className=\"d-flex justify-content-center\">\n          <div style={{ width: '300px', 'padding-left': '50px' }}>\n            {options.map((res) => {\n              return (\n                <h6\n                  style={{ cursor: 'pointer' }}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    const title_result = res.name;\n                    setDisplay(false);\n                    setContainerDisplay(true);\n                    axios\n                      .get(`/api/get-offer/${title_result}`)\n                      .then((result) => {\n                        let games = result.data;\n                        setGames(games);\n                      });\n                  }}\n                >\n                  {res.name}\n                </h6>\n              );\n            })}\n          </div>\n        </div>\n      )}\n      <div className=\"d-flex justify-content-center\">\n        {gamesList.length > 0 || !containerDisplay ? (\n          <div>\n            {gamesList.map((selectedGame) => (\n              <div className=\"d-flex justify-content-center\">\n                <div\n                  className=\"card h-100\"\n                  style={{ width: '18rem', marginTop: '20px' }}\n                >\n                  <img\n                    className=\"card-img-top\"\n                    src={selectedGame.game.picture}\n                    alt=\"Card image cap\"\n                  />\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">{selectedGame.game.title}</h5>\n                    <p className=\"card-text\">\n                      Category : {selectedGame.game.category}\n                    </p>\n                    {/* <p className=\"card-text\">\n                      User : {selectedGame.user.firstName}\n                    </p> */}\n                    <p className=\"card-text\">\n                      Rating : {selectedGame.game.rating}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <h1>Sorry we don't have this game</h1>\n        )}\n      </div>\n    </div>\n  );\n}\n","/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/AddGame.js",[],"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/ActiveOffers.js",[],"/Users/soare/Desktop/Advanced/IntelliJ/switch-play-frontend/src/components/EditableFields.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":27,"nodeType":"64","messageId":"65","endLine":1,"endColumn":36},{"ruleId":"62","severity":1,"message":"66","line":10,"column":10,"nodeType":"64","messageId":"65","endLine":10,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":149,"column":25,"nodeType":"69","endLine":152,"endColumn":26},{"ruleId":"67","severity":1,"message":"70","line":164,"column":25,"nodeType":"69","endLine":164,"endColumn":54},{"ruleId":"67","severity":1,"message":"70","line":170,"column":25,"nodeType":"69","endLine":170,"endColumn":51},{"ruleId":"62","severity":1,"message":"63","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":26},{"ruleId":"71","severity":1,"message":"72","line":85,"column":19,"nodeType":"69","endLine":89,"endColumn":21},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'loggedIn' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]